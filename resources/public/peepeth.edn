{:extension/meta
 {:name          "Light Peepeth client"
  :description   "A light client for Peepeth using extensions"
  :documentation "..."}

 :extension/lifecycle
 {:on-activated  #event [:fetch-all-posts]}

 :events/fetch-all-posts
 [:ethereum/logs {:address "0xfa28ec7198028438514b49a3cf353bca5541ce1d"
                  :topics  ["PeepEth()"]
                  :inputs  [{:name :hash :type :string}] ;; Allows to decode transaction data
                  :on-log  #event [:fetch-ipfs]}] ;; A map of decoded data will be injected

 :events/fetch-ipfs
 (let [{:keys [hash]} properties]
   [:ipfs/get {:hash       hash
               :on-success #event [:db/append {:path [:all-posts]}]}])

 :queries/all-posts
 [:db/get {:path  [:all-posts]
           :limit 20}]

 :views/post
 ;; TODO get account details
 ;;      handle threads
 (let [{:keys [content untrustedAddress untrustedTimestamp parentID]} properties]
   [view {}
    [view {}
     [text {}
      untrustedAddress]
     [text {}
      untrustedTimestamp]]
    [text {}
     content]])

 :styles/screen
 {:background-color #?(:android :green
                       :ios     :red
                       :web     :white)}

 :i18n/title
 {:en "Peepeth !!"}

 :hooks/main
 [screen {:style #style [:screen]}
  [toolbar {}
   [text {}
    #i18n [:title]]]
  (let {posts #query [:all-posts]}
   [list {:data     posts
          :template #view [:post]}])]}
